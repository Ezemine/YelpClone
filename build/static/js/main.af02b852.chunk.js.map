{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","handleSortByChange","sortByOptions","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptionValue","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.af02b852.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component //Changed business to Business to be more inline with rest of document\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            //above comment\r\n            <div className =\"Business\">\r\n                <div className =\"image-container\">\r\n                    <img src= {this.props.business.imageSrc} alt=''/>\r\n                </div>\r\n                <h2> {this.props.business.name}</h2>\r\n                <div className =\"Business-information\">\r\n                    <div className =\"Business-address\">\r\n                        <p>{this.props.business.address}</p>\r\n                        <p>{this.props.business.city}</p>\r\n                        <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\r\n                    </div>\r\n                    <div className =\"Business-reviews\">\r\n                        <h3>{this.props.business.category}</h3>\r\n                        <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\r\n                        <p>{`${this.props.business.reviewCount} reviews`}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Business;","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from \"../Business/Business.js\";\r\n\r\nclass BusinessList extends React.Component {\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n                {\r\n                    this.props.businesses.map(business => \r\n                    {\r\n                        return <Business business = {business} key={business.id}/>\r\n                    })\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state =\r\n        {\r\n            term:\"\",\r\n            location:\"\",\r\n            sortBy:\"\"\r\n        };\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n\r\n\r\n\r\n        this.sortByOptions =\r\n        {\r\n            \"Best Match\": \"best_match\",\r\n            \"Highest Rated\": \"rating\",\r\n            \"Most Reviewed\": \"review_count\"\r\n        };\r\n    }\r\n\r\n    getSortByClass(sortByOption) \r\n    {\r\n        return this.state.sortBy === sortByOption? \"active\" : \"\"; //ternary operator > if statement\r\n    }\r\n\r\n    handleSortByChange(sortByOption)\r\n    {\r\n        this.setState({ sortBy : sortByOption });\r\n    };\r\n\r\n    handleTermChange(event)\r\n    {\r\n        this.setState({term : event.target.value})\r\n    };\r\n      \r\n    handleLocationChange(event)\r\n    {\r\n        this.setState({location : event.target.value})\r\n    };\r\n\r\n    handleSearch(event)\r\n    {\r\n        this.props.searchYelp\r\n        (\r\n            this.state.term,\r\n            this.state.location,\r\n            this.state.sortBy\r\n        );\r\n        \r\n        event.preventDefault();\r\n    }\r\n\r\n    renderSortByOptions() \r\n    {\r\n        return Object.keys(this.sortByOptions).map(sortByOption =>\r\n        {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            return (<li key = {sortByOptionValue}\r\n                className= {this.getSortByClass(sortByOptionValue)}\r\n                onClick= {this.handleSortByChange.bind(this, sortByOptionValue)}>\r\n                {sortByOption} </li>)\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <div className=\"SearchBar-sort-options\">\r\n                    <ul>\r\n                        {this.renderSortByOptions()}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"SearchBar-fields\">\r\n                    <input placeholder=\"Restaurants, Hole-in-Walls, Hotels, Accountants\" onChange={this.handleTermChange} />\r\n                    <input placeholder=\"City, State or Zip\" onChange={this.handleLocationChange} />\r\n                </div>\r\n                <div className=\"SearchBar-submit\">\r\n                    <a onClick={this.handleSearch}>Feeling Hungry?</a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","// Client ID\r\n// NEtjLAq4I_0nXkWcMmJr-A\r\n\r\n// API Key\r\n// FZyKpYS75Xap-ikJSXyHUItWQ-buINDNA1m8F1Vc9KNnvXOjoMa2tqCQp5Tkyb28fo317d3V1bq2EiSWM6jLI7eyKGUfRVRQadV7rX_naOlAJcY1tY2jFPswHn6CXnYx\r\nconst apiKey = 'FZyKpYS75Xap-ikJSXyHUItWQ-buINDNA1m8F1Vc9KNnvXOjoMa2tqCQp5Tkyb28fo317d3V1bq2EiSWM6jLI7eyKGUfRVRQadV7rX_naOlAJcY1tY2jFPswHn6CXnYx';\r\nconst Yelp =\r\n{\r\n    search(term, location, sortBy)\r\n    {\r\n        return fetch(`https://cors-anywhere.herokuapp.com\r\n        https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`,\r\n        {\r\n            headers: {\r\n            Authorization: `Bearer ${apiKey}`\r\n            }\r\n        }).then(response =>\r\n        {\r\n            return response.json();\r\n        }).then(jsonResponse =>\r\n        {\r\n            if (jsonResponse.businesses)\r\n            {\r\n                return jsonResponse.businesses.map(business =>\r\n                {\r\n                    return {\r\n                    id: business.id,\r\n                    imageSrc: business.image_url,\r\n                    name: business.name,\r\n                    address: business.location.address1,\r\n                    city: business.location.city,\r\n                    state: business.location.state,\r\n                    zipCode: business.location.zip_code,\r\n                    category: business.categories[0].title,\r\n                    rating: business.rating,\r\n                    reviewCount: business.review_count\r\n                    }\r\n                })\r\n        }\r\n        })\r\n    }\r\n};\r\n\r\nexport default Yelp;","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList.js';\nimport SearchBar from \"../SearchBar/SearchBar.js\";\nimport Yelp from '../../util/Yelp.js';\n\nclass App extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n\n    this.state =\n    {\n      businesses: []\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy)\n  {\n    Yelp.search(term, location, sortBy).then(businesses =>\n    {\n      this.setState({businesses: businesses});\n    });\n  }\n  \n  render()\n  {\n    return (\n      <div className=\"App\">\n          <h1>Rudimentary Yelp Search</h1>\n          <SearchBar searchYelp={this.searchYelp} />\n          <BusinessList businesses={this.state.businesses}/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker();\n"],"sourceRoot":""}